servers = (
  {
    address = "chat.freenode.net";
    chatnet = "ub";
    port = "6697";
    use_ssl = "yes";
    ssl_verify = "yes";
    ssl_cafile = "~/.irssi/a.crt";
    autoconnect = "no";
  },

  { 
    address = "irchub.linuxfire.com.cn";
    chatnet = "fr";
    port = "7001";
  },
  { address = "weber.freenode.net"; chatnet = "ub1"; port = "8001"; },
  { address = "irc.freenode.net"; chatnet = "ub2"; port = "8000"; },
  { address = "irc.oftc.net"; chatnet = "ot"; port = "9999"; },

  {
    address = "weber.freenode.net";
    port = "6667";
    use_ssl = "yes";
    ssl_verify = "no";
  }
);

chatnets = {
  ub1 = { type = "IRC"; autosendcmd = ""; };
  ub = { type = "IRC"; autosendcmd = ""; };
  fr = { type = "IRC"; autosendcmd = ""; };

  freenode = {
    type = "IRC";
    max_kicks = "4";
    max_msgs = "5";
    max_whois = "4";
    max_query_chans = "5";
  };
  EFNet = { 
    type = "IRC";
    max_kicks = "4";
    max_msgs = "3";
    max_whois = "1";
  };
  Undernet = {
    type = "IRC";
    max_kicks = "1";
    max_msgs = "3";
    max_whois = "30";
  };
  DALnet = {
    type = "IRC";
    max_kicks = "4";
    max_msgs = "3";
    max_whois = "30";
  };
  QuakeNet = {
    type = "IRC";
    max_kicks = "1";
    max_msgs = "3";
    max_whois = "30";
  };
  OFTC = { 
    type = "IRC";
    max_kicks = "1";
    max_msgs = "3";
    max_whois = "30";
  };
  GameSurge = {
    type = "IRC";
    max_kicks = "1";
    max_msgs = "3";
    max_whois = "30";
  };
  WebChat = {
    type = "IRC";
    max_kicks = "1";
    max_msgs = "3";
    max_whois = "30";
  };
  Rizon = { 
    type = "IRC";
    max_kicks = "1";
    max_msgs = "3";
    max_whois = "30";
  };
  LinkNet = {
    type = "IRC";
    max_kicks = "1";
    max_msgs = "3";
    max_whois = "30";
  };
  SILC = { type = "SILC"; };
  Ubuntu = { type = "IRC"; };
  IRCnet = { type = "IRC"; };
  ub2 = { type = "IRC"; };
  ot = { type = "IRC"; };
};

channels = (
  { name = "#linuxfire"; chatnet = "fr"; autojoin = "Yes"; },
  { name = "#sevk"; chatnet = "ub"; autojoin = "Yes"; },
  { name = "#ubuntu-cn"; chatnet = "ub"; autojoin = "No"; },
  { name = "#ruby-lang"; chatnet = "ub"; autojoin = "No"; },
  { name = "#gentoo-cn"; chatnet = "ub"; autojoin = "No"; },
  { name = "#wikipedia-zh"; chatnet = "ub"; autojoin = "No"; },
  { name = "#arch-cn"; chatnet = "ot"; autojoin = "Yes"; },
  { name = "#ubuntu-cn-ot"; chatnet = "ub"; autojoin = "No"; },
  { name = "#fedora-cn"; chatnet = "ub"; autojoin = "No"; },
  { name = "#blendercn"; chatnet = "fr"; autojoin = "No"; }
);

aliases = {
  J = "join";
  ms = "msg nickserv";
  ns = "msg nickserv";
  WJOIN = "join -window";
  WQUERY = "query -window";
  LEAVE = "part";
  BYE = "quit";
  EXIT = "quit";
  SIGNOFF = "quit";
  DESCRIBE = "action";
  DATE = "time";
  HOST = "userhost";
  LAST = "lastlog";
  SAY = "msg *";
  WI = "whois";
  WII = "whois $0 $0";
  WW = "whowas";
  W = "who";
  N = "names";
  M = "msg";
  T = "topic";
  C = "clear";
  CL = "clear";
  K = "kick";
  KB = "kickban";
  KN = "knockout";
  BANS = "ban";
  B = "ban";
  MUB = "unban *";
  UB = "unban";
  IG = "ignore";
  UNIG = "unignore";
  SB = "scrollback";
  UMODE = "mode $N";
  WC = "window close";
  WN = "window new hide";
  SV = "say Irssi $J ($V) - http://irssi.org/";
  3B = "say http://sevkme.vicp.net:802/c.jpg";
  3C1 = "say http://skks.3322.org:802/c.jpg";
  3C2 = "say http://sevk.cz.cc/";
  3C3 = "say http://to./zkj";
  3C = "say http://sevk.co.cc";
  JFR = "/connect -ssl fr";
  JOT = "/connect -ssl ot";
  ju = "/j #ubuntu-cn";
  GOTO = "sb goto";
  CHAT = "dcc chat";
  RUN = "SCRIPT LOAD";
  CALC = "exec - if which bc &>/dev/null\\; then echo '$*' | bc | awk '{print \"$*=\"$$1}'\\; else echo bc was not found\\; fi";
  SBAR = "STATUSBAR";
  INVITELIST = "mode $C +I";
  Q = "QUERY";
  "MANUAL-WINDOWS" = "set use_status_window off;set autocreate_windows off;set autocreate_query_level none;set autoclose_windows off;set reuse_unused_windows on;save";
  EXEMPTLIST = "mode $C +e";
  ATAG = "WINDOW SERVER";
  ja = "join #avplayer";
};

statusbar = {
  # formats:
  # when using {templates}, the template is shown only if it's argument isn't
  # empty unless no argument is given. for example {sb} is printed always,
  # but {sb $T} is printed only if $T isn't empty.

  items = {
    # start/end text in statusbars
    barstart = "{sbstart}";
    barend = "{sbend}";

    topicbarstart = "{topicsbstart}";
    topicbarend = "{topicsbend}";

    # treated "normally", you could change the time/user name to whatever
    time = "{sb $Z}";
    user = "{sb {sbnickmode $cumode}$N{sbmode $usermode}{sbaway $A}}";

    # treated specially .. window is printed with non-empty windows,
    # window_empty is printed with empty windows
    window = "{sb $winref:$tag/$itemname{sbmode $M}}";
    window_empty = "{sb $winref{sbservertag $tag}}";
    prompt = "{prompt $[.15]itemname}";
    prompt_empty = "{prompt $winname}";
    topic = " $topic";
    topic_empty = " Irssi v$J - http://www.irssi.org";

    # all of these treated specially, they're only displayed when needed
    lag = "{sb Lag: $0-}";
    act = "{sb Act: $0-}";
    more = "-- more --";
  };

  # there's two type of statusbars. root statusbars are either at the top
  # of the screen or at the bottom of the screen. window statusbars are at
  # the top/bottom of each split window in screen.
  default = {
    # the "default statusbar" to be displayed at the bottom of the window.
    # contains all the normal items.
    window = {
      disabled = "no";

      # window, root
      type = "window";
      # top, bottom
      placement = "bottom";
      # number
      position = "1";
      # active, inactive, always
      visible = "active";

      # list of items in statusbar in the display order
      items = {
        barstart = { priority = "100"; };
        time = { };
        user = { };
        window = { };
        window_empty = { };
        lag = { priority = "-1"; };
        act = { priority = "10"; };
        more = { priority = "-1"; alignment = "right"; };
        barend = { priority = "100"; alignment = "right"; };
        usercount = { };
      };
    };

    # statusbar to use in inactive split windows
    window_inact = {
      type = "window";
      placement = "bottom";
      position = "1";
      visible = "inactive";
      items = {
        barstart = { priority = "100"; };
        window = { };
        window_empty = { };
        more = { priority = "-1"; alignment = "right"; };
        barend = { priority = "100"; alignment = "right"; };
      };
    };

    # we treat input line as yet another statusbar :) It's possible to
    # add other items before or after the input line item.
    prompt = {
      type = "root";
      placement = "bottom";
      # we want to be at the bottom always
      position = "100";
      visible = "always";
      items = {
        prompt = { priority = "-1"; };
        prompt_empty = { priority = "-1"; };
        # treated specially, this is the real input line.
        input = { priority = "10"; };
      };
    };

    # topicbar
    topic = {
      type = "root";
      placement = "top";
      position = "1";
      visible = "always";
      items = {
        topicbarstart = { priority = "100"; };
        topic = { };
        topic_empty = { };
        topicbarend = { priority = "100"; alignment = "right"; };
      };
    };
  };
};
settings = {
  core = {
    real_name = "iIlL10Oo";
    user_name = "iIlL10Oo";
    nick = "iIlL10Oo";
    recode = "no";
    timestamp_format = "%H%M%S";
    server_reconnect_time = "10min";
  };
  "fe-text" = { actlist_sort = "refnum"; scrollback_lines = "150"; };
  "fe-common/core" = {
    beep_msg_level = "DCC HILIGHT msgs notices dccmsgs";
    beep_when_window_active = "yes";
    bell_beeps = "no";
    theme = "default";
  };
  "perl/core/scripts" = {
    #beep_cmd = "beep -f 2000 -n -f 1500 -n -f 1000 &";
    beep_cmd = "exec aplay /home/BAK/sevk/Sent.wav -q > /dev/null &";
    beep_flood = "700";
    usercount_show_halfops = "yes";
    notify_time = "100";
  };
  "irc/core" = {
    ban_type = "Host";
    lag_max_before_disconnect = "525600min";
  };
  "fe-common/irc" = { netsplit_max_nicks = "20"; };
};
ignores = (
  { level = "JOINS PARTS QUITS"; channels = ( "#ubuntu" ); },
  { level = "JOINS PARTS QUITS"; channels = ( "#ruby" ); },
  { level = "JOINS PARTS QUITS"; channels = ( "#gentoo" ); },
  { level = "JOINS PARTS QUITS"; channels = ( "#ruby-lang" ); },
  { level = "JOINS PARTS QUITS"; channels = ( "#vim" ); },
  { level = "JOINS PARTS QUITS"; channels = ( "#archlinux" ); }
);
conversions = { "#sevk" = "utf-8"; };
keyboard = (
  { key = "^F"; id = "scroll_forward"; data = ""; },
  { key = "^R"; id = "scroll_forward"; data = ""; },
  { key = "meta-N"; id = "scroll_forward"; data = ""; },
  { key = "^N"; id = "scroll_forward"; data = ""; },
  { key = "^P"; id = "scroll_backward"; data = ""; },
  { key = "^f"; id = "scroll_forward"; data = ""; },
  { key = "^WC"; id = "command"; data = "wc "; }
);
